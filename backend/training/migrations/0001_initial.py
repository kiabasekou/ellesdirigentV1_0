# Generated by Django 4.2.7 on 2025-07-20 01:55

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("quiz", "__first__"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Formation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("titre", models.CharField(db_index=True, max_length=200)),
                ("slug", models.SlugField(max_length=220, unique=True)),
                ("description", models.TextField()),
                ("objectifs", models.JSONField(default=list)),
                ("prerequis", models.TextField(blank=True)),
                (
                    "categorie",
                    models.CharField(
                        choices=[
                            ("leadership", "Leadership"),
                            ("communication", "Communication"),
                            ("campagne", "Campagne électorale"),
                            ("gouvernance", "Gouvernance"),
                            ("negociation", "Négociation"),
                            ("droits_femmes", "Droits des femmes"),
                            ("economie", "Économie politique"),
                        ],
                        db_index=True,
                        max_length=50,
                    ),
                ),
                (
                    "niveau",
                    models.CharField(
                        choices=[
                            ("debutant", "Débutant"),
                            ("intermediaire", "Intermédiaire"),
                            ("avance", "Avancé"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Brouillon"),
                            ("published", "Publiée"),
                            ("archived", "Archivée"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "duree_heures",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(200),
                        ]
                    ),
                ),
                ("date_debut", models.DateTimeField()),
                ("date_fin", models.DateTimeField()),
                ("lieu", models.CharField(max_length=200)),
                ("est_en_ligne", models.BooleanField(default=False)),
                ("lien_visio", models.URLField(blank=True)),
                (
                    "max_participants",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(500),
                        ]
                    ),
                ),
                (
                    "cout",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("materiel_requis", models.TextField(blank=True)),
                ("formateur", models.CharField(max_length=200)),
                ("formateur_bio", models.TextField(blank=True)),
                (
                    "formateur_photo",
                    models.ImageField(blank=True, upload_to="formateurs/"),
                ),
                (
                    "image_cover",
                    models.ImageField(blank=True, upload_to="formations/covers/"),
                ),
                ("documents", models.JSONField(default=list)),
                ("certificat_delivre", models.BooleanField(default=True)),
                ("quiz_requis", models.BooleanField(default=False)),
                (
                    "note_minimale",
                    models.PositiveIntegerField(
                        default=70,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="formations_creees",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InscriptionFormation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_inscription", models.DateTimeField(auto_now_add=True)),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("inscrite", "Inscrite"),
                            ("confirmee", "Confirmée"),
                            ("en_cours", "En cours"),
                            ("terminee", "Terminée"),
                            ("abandonnee", "Abandonnée"),
                            ("certifiee", "Certifiée"),
                        ],
                        default="inscrite",
                        max_length=20,
                    ),
                ),
                (
                    "progression",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MaxValueValidator(100)],
                    ),
                ),
                ("modules_completes", models.JSONField(default=list)),
                ("temps_passe", models.DurationField(default=datetime.timedelta)),
                (
                    "note_finale",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "evaluation_formation",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("commentaire_evaluation", models.TextField(blank=True)),
                ("certificat_genere", models.BooleanField(default=False)),
                ("certificat_url", models.URLField(blank=True)),
                ("date_completion", models.DateTimeField(blank=True, null=True)),
                (
                    "formation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="training.formation",
                    ),
                ),
                (
                    "participante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="formation",
            name="participants",
            field=models.ManyToManyField(
                related_name="formations_suivies",
                through="training.InscriptionFormation",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Certificat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero_certificat", models.CharField(max_length=50, unique=True)),
                ("date_generation", models.DateTimeField(auto_now_add=True)),
                ("fichier_pdf", models.FileField(upload_to="certificats/")),
                ("hash_verification", models.CharField(max_length=64)),
                ("est_valide", models.BooleanField(default=True)),
                (
                    "inscription",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="training.inscriptionformation",
                    ),
                ),
            ],
            options={
                "ordering": ["-date_generation"],
            },
        ),
        migrations.CreateModel(
            name="Module",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titre", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("ordre", models.PositiveIntegerField()),
                ("duree_minutes", models.PositiveIntegerField()),
                ("contenu", models.TextField()),
                ("video_url", models.URLField(blank=True)),
                ("documents_url", models.JSONField(default=list)),
                (
                    "formation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modules",
                        to="training.formation",
                    ),
                ),
                (
                    "quiz",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="quiz.quiz",
                    ),
                ),
            ],
            options={
                "ordering": ["ordre"],
                "unique_together": {("formation", "ordre")},
            },
        ),
        migrations.AddIndex(
            model_name="inscriptionformation",
            index=models.Index(
                fields=["statut", "progression"], name="training_in_statut_8dd7e6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inscriptionformation",
            index=models.Index(
                fields=["date_inscription"], name="training_in_date_in_8b3d5d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="inscriptionformation",
            unique_together={("formation", "participante")},
        ),
        migrations.AddIndex(
            model_name="formation",
            index=models.Index(
                fields=["categorie", "niveau"], name="training_fo_categor_459a30_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="formation",
            index=models.Index(
                fields=["date_debut", "date_fin"], name="training_fo_date_de_067d28_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="formation",
            index=models.Index(
                fields=["status", "est_en_ligne"], name="training_fo_status_7efb1a_idx"
            ),
        ),
    ]
