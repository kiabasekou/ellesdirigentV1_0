# Generated by Django 4.2.7 on 2025-07-21 01:02

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import training.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("quiz", "0002_alter_question_options_alter_quiz_options_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Formation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titre", models.CharField(max_length=200, verbose_name="Titre")),
                ("slug", models.SlugField(blank=True, max_length=250, unique=True)),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "description_courte",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Description courte"
                    ),
                ),
                (
                    "categorie",
                    models.CharField(
                        choices=[
                            ("communication", "Communication"),
                            ("gouvernance", "Gouvernance"),
                            ("campagne", "Campagne Électorale"),
                            ("droits_femmes", "Droits des Femmes"),
                            ("leadership", "Leadership"),
                        ],
                        max_length=20,
                        verbose_name="Catégorie",
                    ),
                ),
                (
                    "niveau",
                    models.CharField(
                        choices=[
                            ("debutant", "Débutant"),
                            ("intermediaire", "Intermédiaire"),
                            ("avance", "Avancé"),
                        ],
                        default="debutant",
                        max_length=20,
                        verbose_name="Niveau",
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        blank=True,
                        default=training.models.default_empty_list,
                        verbose_name="Mots-clés",
                    ),
                ),
                (
                    "duree_heures",
                    models.PositiveIntegerField(verbose_name="Durée en heures"),
                ),
                ("date_debut", models.DateTimeField(verbose_name="Date de début")),
                ("date_fin", models.DateTimeField(verbose_name="Date de fin")),
                (
                    "lieu",
                    models.CharField(blank=True, max_length=300, verbose_name="Lieu"),
                ),
                (
                    "adresse_complete",
                    models.TextField(blank=True, verbose_name="Adresse complète"),
                ),
                (
                    "est_en_ligne",
                    models.BooleanField(
                        default=False, verbose_name="Formation en ligne"
                    ),
                ),
                (
                    "lien_visioconference",
                    models.URLField(blank=True, verbose_name="Lien visioconférence"),
                ),
                (
                    "max_participants",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Nombre maximum de participants",
                    ),
                ),
                (
                    "cout",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10, verbose_name="Coût"
                    ),
                ),
                (
                    "inscription_ouverte",
                    models.BooleanField(
                        default=True, verbose_name="Inscription ouverte"
                    ),
                ),
                (
                    "date_limite_inscription",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date limite d'inscription"
                    ),
                ),
                (
                    "validation_requise",
                    models.BooleanField(
                        default=False, verbose_name="Validation requise"
                    ),
                ),
                (
                    "formateur_nom",
                    models.CharField(max_length=200, verbose_name="Nom du formateur"),
                ),
                (
                    "formateur_bio",
                    models.TextField(
                        blank=True, verbose_name="Biographie du formateur"
                    ),
                ),
                (
                    "formateur_photo",
                    models.ImageField(
                        blank=True,
                        upload_to="formateurs/",
                        verbose_name="Photo du formateur",
                    ),
                ),
                (
                    "image_cover",
                    models.ImageField(
                        blank=True,
                        upload_to="formations/",
                        verbose_name="Image de couverture",
                    ),
                ),
                (
                    "programme_detaille",
                    models.TextField(blank=True, verbose_name="Programme détaillé"),
                ),
                (
                    "objectifs",
                    models.JSONField(
                        blank=True,
                        default=training.models.default_empty_list,
                        verbose_name="Objectifs pédagogiques",
                    ),
                ),
                ("prerequis", models.TextField(blank=True, verbose_name="Prérequis")),
                (
                    "materiel_requis",
                    models.TextField(blank=True, verbose_name="Matériel requis"),
                ),
                (
                    "certificat_delivre",
                    models.BooleanField(
                        default=True, verbose_name="Certificat délivré"
                    ),
                ),
                (
                    "quiz_requis",
                    models.BooleanField(default=False, verbose_name="Quiz requis"),
                ),
                (
                    "note_minimale",
                    models.PositiveIntegerField(
                        default=70,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Note minimale pour certification",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("brouillon", "Brouillon"),
                            ("active", "Active"),
                            ("archivee", "Archivée"),
                            ("suspendue", "Suspendue"),
                        ],
                        default="brouillon",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "est_featured",
                    models.BooleanField(
                        default=False, verbose_name="Formation mise en avant"
                    ),
                ),
                (
                    "date_creation",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "date_modification",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="formations_creees",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Formation",
                "verbose_name_plural": "Formations",
                "ordering": ["-date_debut"],
            },
        ),
        migrations.CreateModel(
            name="ModuleFormation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titre", models.CharField(max_length=200, verbose_name="Titre")),
                ("description", models.TextField(verbose_name="Description")),
                ("ordre", models.PositiveIntegerField(verbose_name="Ordre")),
                (
                    "duree_minutes",
                    models.PositiveIntegerField(verbose_name="Durée en minutes"),
                ),
                ("contenu", models.TextField(verbose_name="Contenu")),
                (
                    "objectifs",
                    models.JSONField(
                        blank=True,
                        default=training.models.default_empty_list,
                        verbose_name="Objectifs du module",
                    ),
                ),
                (
                    "video_url",
                    models.URLField(blank=True, verbose_name="URL de la vidéo"),
                ),
                (
                    "documents_url",
                    models.JSONField(
                        default=training.models.default_empty_list,
                        verbose_name="Documents",
                    ),
                ),
                (
                    "ressources_supplementaires",
                    models.TextField(
                        blank=True, verbose_name="Ressources supplémentaires"
                    ),
                ),
                (
                    "quiz_requis",
                    models.BooleanField(default=False, verbose_name="Quiz requis"),
                ),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                ("date_modification", models.DateTimeField(auto_now=True)),
                (
                    "formation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modules",
                        to="training.formation",
                        verbose_name="Formation",
                    ),
                ),
                (
                    "quiz",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="quiz.quiz",
                        verbose_name="Quiz",
                    ),
                ),
            ],
            options={
                "verbose_name": "Module de formation",
                "verbose_name_plural": "Modules de formation",
                "ordering": ["formation", "ordre"],
            },
        ),
        migrations.CreateModel(
            name="InscriptionFormation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_inscription",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date d'inscription"
                    ),
                ),
                (
                    "date_validation",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de validation"
                    ),
                ),
                (
                    "date_debut",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de début"
                    ),
                ),
                (
                    "date_completion",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de fin"
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("en_attente", "En attente"),
                            ("confirmee", "Confirmée"),
                            ("en_cours", "En cours"),
                            ("terminee", "Terminée"),
                            ("abandonnee", "Abandonnée"),
                            ("annulee", "Annulée"),
                        ],
                        default="en_attente",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "progression",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MaxValueValidator(100)],
                        verbose_name="Progression (%)",
                    ),
                ),
                (
                    "temps_passe",
                    models.DurationField(
                        default=training.models.default_timedelta,
                        verbose_name="Temps passé",
                    ),
                ),
                (
                    "derniere_activite",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Dernière activité"
                    ),
                ),
                (
                    "evaluation_formation",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Évaluation (1-5)",
                    ),
                ),
                (
                    "commentaire_evaluation",
                    models.TextField(
                        blank=True, verbose_name="Commentaire d'évaluation"
                    ),
                ),
                (
                    "certificat_genere",
                    models.BooleanField(
                        default=False, verbose_name="Certificat généré"
                    ),
                ),
                (
                    "note_finale",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Note finale",
                    ),
                ),
                (
                    "notes_privees",
                    models.TextField(blank=True, verbose_name="Notes privées"),
                ),
                (
                    "formation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inscriptions",
                        to="training.formation",
                        verbose_name="Formation",
                    ),
                ),
                (
                    "modules_completes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="inscriptions_completees",
                        to="training.moduleformation",
                        verbose_name="Modules complétés",
                    ),
                ),
                (
                    "participante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inscriptions_formations",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Participante",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inscription à une formation",
                "verbose_name_plural": "Inscriptions aux formations",
            },
        ),
        migrations.AddField(
            model_name="formation",
            name="participants",
            field=models.ManyToManyField(
                related_name="formations",
                through="training.InscriptionFormation",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Participants",
            ),
        ),
        migrations.CreateModel(
            name="Certificat",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero_certificat",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Numéro de certificat"
                    ),
                ),
                (
                    "hash_verification",
                    models.CharField(
                        max_length=64, verbose_name="Hash de vérification"
                    ),
                ),
                (
                    "date_generation",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de génération"
                    ),
                ),
                (
                    "date_expiration",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date d'expiration"
                    ),
                ),
                (
                    "est_valide",
                    models.BooleanField(default=True, verbose_name="Certificat valide"),
                ),
                (
                    "raison_invalidation",
                    models.TextField(blank=True, verbose_name="Raison d'invalidation"),
                ),
                (
                    "fichier_pdf",
                    models.FileField(
                        blank=True, upload_to="certificats/", verbose_name="Fichier PDF"
                    ),
                ),
                (
                    "inscription",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="certificat",
                        to="training.inscriptionformation",
                        verbose_name="Inscription",
                    ),
                ),
            ],
            options={
                "verbose_name": "Certificat",
                "verbose_name_plural": "Certificats",
                "ordering": ["-date_generation"],
            },
        ),
        migrations.AddIndex(
            model_name="moduleformation",
            index=models.Index(
                fields=["formation", "ordre"], name="training_mo_formati_e2a7fe_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="moduleformation",
            unique_together={("formation", "ordre")},
        ),
        migrations.AddIndex(
            model_name="inscriptionformation",
            index=models.Index(
                fields=["statut", "progression"], name="training_in_statut_8dd7e6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inscriptionformation",
            index=models.Index(
                fields=["date_inscription"], name="training_in_date_in_8b3d5d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inscriptionformation",
            index=models.Index(
                fields=["formation", "statut"], name="training_in_formati_6a4996_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="inscriptionformation",
            unique_together={("formation", "participante")},
        ),
        migrations.AddIndex(
            model_name="formation",
            index=models.Index(
                fields=["categorie", "niveau"], name="training_fo_categor_459a30_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="formation",
            index=models.Index(
                fields=["date_debut", "date_fin"], name="training_fo_date_de_067d28_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="formation",
            index=models.Index(
                fields=["status", "est_en_ligne"], name="training_fo_status_7efb1a_idx"
            ),
        ),
    ]
